// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste_Back_end_Predify2.Data;

namespace Teste_Back_end_Predify2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220809105859_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Teste_Back_end_Predify2.Models.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Businesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cnpj = "12345678912345",
                            TradeName = "Nome Fantasia",
                            Uf = "São Paulo"
                        },
                        new
                        {
                            Id = 2,
                            Cnpj = "01234567891111",
                            TradeName = "Fantasy Name",
                            Uf = "Joinville"
                        });
                });

            modelBuilder.Entity("Teste_Back_end_Predify2.Models.BusinessSupplier", b =>
                {
                    b.Property<int>("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("BusinessId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("BusinessSuppliers");

                    b.HasData(
                        new
                        {
                            BusinessId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            BusinessId = 1,
                            SupplierId = 2
                        });
                });

            modelBuilder.Entity("Teste_Back_end_Predify2.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierID");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "(11) 99999-7777",
                            SupplierID = 1,
                            Type = "Mobile"
                        });
                });

            modelBuilder.Entity("Teste_Back_end_Predify2.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CpfCnpj = "12345678901444",
                            CreatedAt = new DateTime(2022, 8, 9, 7, 58, 59, 243, DateTimeKind.Local).AddTicks(7348),
                            Name = "Primeiro Fornecedor"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CpfCnpj = "12345678901123",
                            CreatedAt = new DateTime(2022, 8, 9, 7, 58, 59, 243, DateTimeKind.Local).AddTicks(7348),
                            Name = "Segundo Fornecedor"
                        });
                });

            modelBuilder.Entity("Teste_Back_end_Predify2.Models.BusinessSupplier", b =>
                {
                    b.HasOne("Teste_Back_end_Predify2.Models.Business", "Business")
                        .WithMany("BusinessSupplier")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste_Back_end_Predify2.Models.Supplier", "Supplier")
                        .WithMany("BusinessSupplier")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Teste_Back_end_Predify2.Models.Phone", b =>
                {
                    b.HasOne("Teste_Back_end_Predify2.Models.Supplier", null)
                        .WithMany("Phones")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
